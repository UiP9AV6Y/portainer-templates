[
  {
    "type": "stack",
    "title": "Unbound",
    "description": "Unbound DNS resolver",
    "note": "Unbound is a validating, recursive, and caching DNS resolver.",
    "categories": ["network", "dns"],
    "platform": "linux",
    "repository": {
      "url": "https://github.com/uip9av6y/portainer-templates",
      "stackfile": "unbound/docker-stack.yml"
    },
    "env": [
      {
        "name": "DNS_PORT",
        "label": "DNS Port",
        "description": "Exposed port for DNS queries."
      },
      {
        "name": "CONFIG_REPO",
        "label": "Repository URL",
        "description": "URL pointing to the git repository containing Unbound configuration."
      },
      {
        "name": "CONFIG_BRANCH",
        "label": "Repository branch",
        "description": "Repository branch."
      },
      {
        "name": "GIT_USER",
        "label": "Git User",
        "description": "Username to authenticate against the remote repository."
      },
      {
        "name": "GIT_KEY",
        "label": "Docker secret name",
        "description": "Docker secret name containing the SSH key for git repository access."
      },
    ]
  },
  {
    "type": "stack",
    "title": "Unifi Controller",
    "description": "Unifi Access Point controller",
    "note": "The UniFi Controller is a wireless network management software solution from Ubiquiti Networksâ„¢. It allows you to manage multiple wireless networks using a web browser.",
    "categories": ["network", "infrastructure"],
    "platform": "linux",
    "repository": {
      "url": "https://github.com/uip9av6y/portainer-templates",
      "stackfile": "unifi-ap/docker-stack.yml"
    },
    "env": [
      {
        "name": "SYSTEM_IP",
        "label": "Public address",
        "description": "Public address for communication with devices."
      }
    ]
  },
  {
    "type": "stack",
    "title": "Portainer",
    "description": "Simple management UI for Docker",
    "note": "Portainer is a lightweight management UI which allows you to easily manage your different Docker environments (Docker hosts or Swarm clusters).",
    "categories": ["docker"],
    "platform": "linux",
    "repository": {
      "url": "https://github.com/uip9av6y/portainer-templates",
      "stackfile": "portainer/docker-stack.yml"
    },
    "env": [
      {
        "name": "TEMPLATES_URI",
        "label": "Manifest URI",
        "description": "Location of the templates manifest."
      }
    ]
  },
  {
    "type": "stack",
    "title": "Container Crontab",
    "description": "Simple cron runner for containers",
    "note": "A microservice that will perform actions on a Docker container based on cron schedule.",
    "categories": ["docker"],
    "platform": "linux",
    "repository": {
      "url": "https://github.com/uip9av6y/portainer-templates",
      "stackfile": "scheduler/docker-stack.yml"
    }
  },
  {
    "type": "stack",
    "title": "Watchtower",
    "description": "Automatically update running Docker containers",
    "note": "Watches your containers and automatically restarts them whenever their image is refreshed. ",
    "categories": ["docker"],
    "platform": "linux",
    "repository": {
      "url": "https://github.com/uip9av6y/portainer-templates",
      "stackfile": "watchtower/docker-stack.yml"
    },
    "env": [
      {
        "name": "CRON_SCHEDULE",
        "label": "Cron schedule",
        "description": "Activity schedule for watchtower to perform upgrades."
      }
    ]
  }
]
